name: 'Main'
on:
    push:
      branches:
        - '**'
        - '!main'
        - '!feature'
    pull_request:
    create:
        tags:
            - v*
    workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

jobs:
    clang_format:
        name: Clang-Format
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'

            - name: Lint ./lib
              uses: duckdb/duckdb-wasm-ci-env@ae43fa250a6b6ba92fe3d825c6c34b6d68a258a0
              with:
                  script: |-
                      python3 ./scripts/run_clang_format.py \
                        --exclude ./lib/build \
                        --exclude ./lib/third_party \
                        -r ./lib/

    eslint:
        name: ESLint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'

            - name: Cache node_modules
              uses: actions/cache@v3
              with:
                  path: |
                      ./node_modules
                      ./packages/benchmarks/node_modules
                      ./packages/duckdb-wasm/node_modules
                      ./packages/duckdb-wasm-shell/node_modules
                  key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Prepare repository
              uses: duckdb/duckdb-wasm-ci-env@ae43fa250a6b6ba92fe3d825c6c34b6d68a258a0
              with:
                  script: |-
                      yarn install --frozen-lockfile --prefer-offline

            - name: Lint @duckdb/duckdb-wasm
              uses: duckdb/duckdb-wasm-ci-env@ae43fa250a6b6ba92fe3d825c6c34b6d68a258a0
              with:
                  script: |-
                      yarn workspace @duckdb/duckdb-wasm run lint

            - name: Lint @duckdb/duckdb-wasm-shell
              uses: duckdb/duckdb-wasm-ci-env@ae43fa250a6b6ba92fe3d825c6c34b6d68a258a0
              with:
                  script: |-
                      yarn workspace @duckdb/duckdb-wasm-shell run lint

            - name: Lint @duckdb/benchmarks
              uses: duckdb/duckdb-wasm-ci-env@ae43fa250a6b6ba92fe3d825c6c34b6d68a258a0
              with:
                  script: |-
                      yarn workspace @duckdb/benchmarks run lint

    tpchgen:
        name: TPCH Generator
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'

            - name: Cache generator
              uses: actions/cache@v3
              id: cache-generator
              with:
                  path: ./submodules/tpch-dbgen/dbgen/dbgen
                  key: ${{ runner.os }}-tpch-dbgen

            - name: Build generator
              if: steps.cache-generator.outputs.cache-hit != 'true'
              uses: duckdb/duckdb-wasm-ci-env@ae43fa250a6b6ba92fe3d825c6c34b6d68a258a0
              with:
                  script: |-
                      make -C ./submodules/tpch-dbgen/dbgen/ dbgen

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: tpch-dbgen
                  path: |
                      ./submodules/tpch-dbgen/dbgen/dbgen
                  retention-days: 1

    dataprep:
        name: Dataprep
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'

            - name: Cache rust build
              uses: actions/cache@v3
              with:
                  path: |
                      ./.cargo/bin/
                      ./.cargo/registry/index/
                      ./.cargo/registry/cache/
                      ./.cargo/git/db/
                      ./target
                  key: ${{ runner.os }}-dataprep-${{ hashFiles('./Cargo.lock') }}-${{ hashFiles('./tools/dataprep/src/*.rs') }}
                  restore-keys: |
                      ${{ runner.os }}-dataprep-

            - name: Build generator
              shell: bash
              run: |
                      cargo build --manifest-path=./Cargo.toml --release -p dataprep

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: dataprep
                  path: |
                      ./target/release/dataprep
                  retention-days: 1

    wasm_eh:
        name: Wasm / eh
        runs-on: ubuntu-latest
        needs:
            - dataprep
            - tpchgen
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - name: Prepare repository
              run: |
                  [ -f duckdb.patch ] && cd submodules/duckdb && git apply ../../duckdb.patch || echo "No patching needed"

            - uses: mymindstorm/setup-emsdk@v12
              with:
                  version: 'latest'

            - name: Setup Ccache
              uses: hendrikmuhs/ccache-action@main
              with:
                  key: ${{ github.job }}

            - name: Git submodule status
              run: |
                  git submodule status > git_submodule_status.txt

            - name: Build Wasm module
              run: |
                  ./scripts/wasm_build_lib.sh relperf eh

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: wasm-eh
                  path: |
                      ./packages/duckdb-wasm/src/bindings/duckdb-eh.js
                      ./packages/duckdb-wasm/src/bindings/duckdb-eh.wasm
                  retention-days: 1
